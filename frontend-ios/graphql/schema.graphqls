type Query {
  recipes: [Recipe]
  recipeById(id: ID!): Recipe
  userRecipes(email: String!): [Recipe!]!
  getUsername(email: String!): String!
  userTags(email: String!): [Tag!]!
}

type Mutation {
  addRecipe(input: RecipeInput!): Recipe!
  deleteRecipe(id: ID!): Boolean!
  signUp(input: SignUpInput!): User! # User signup
  login(input: LoginInput!): String! # User login returns a token
  logout(email: String!): Boolean!
  addTag(email: String!, name: String!): Tag!
  updateRecipeImage(recipeId: String!, imageurl: String!): Recipe!
  updateRecipe(input: UpdateRecipeInput!): Recipe!
}

type User {
  id: ID!
  email: String!
  username: String
  recipes: [Recipe!]! # Recipes associated with the user
}

type Recipe {
  id: ID!
  title: String!
  description: String!
  imageurl: String
  ingredients: [Ingredient!]!
  steps: [String!]!
  user: User!
  tags: [Tag!]!
}

type Ingredient {
  id: ID!
  name: String!
  measurement: String!
}

type Tag {
  id: ID!
  name: String!
  user: User!
}

input UserInput {
  email: String!
}

input IngredientInput {
  name: String!
  measurement: String!
}

input RecipeInput {
  title: String!
  description: String!
  imageurl: String
  ingredients: [IngredientInput!]!
  steps: [String!]!
  user: UserInput!
  tags: [String!]
}

input UpdateRecipeInput {
  id: ID!
  title: String!
  description: String!
  imageurl: String
  ingredients: [IngredientInput!]!
  steps: [String!]!
  tags: [String!]
}

input SignUpInput {
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}
